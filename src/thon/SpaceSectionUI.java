package thon;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
//import java.io.File;
import java.text.DateFormat;
import java.util.Date;
import javafx.scene.input.DataFormat;
import javax.swing.Timer;
//import java.net.URL;
import java.util.ArrayList;
<<<<<<< HEAD
import java.util.Scanner;
import javax.swing.table.DefaultTableModel;
=======
import javax.swing.JOptionPane;
//import java.util.Scanner;
>>>>>>> origin/master

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ELCHOCO
 */
public class SpaceSectionUI extends javax.swing.JFrame 
{
<<<<<<< HEAD
    SpaceAssignCntl parentSpaceAssignCntl;
    Organization newOrg;
    OrganizationList orgList;
    OrganizationTableModel tableModel;
    ArrayList <Organization> sortedOrgs;
=======
    private SpaceAssignCntl parentSpaceAssignCntl;
    /*
    private Organization newOrg;
    private OrganizationList orgList;
    private OrganizationTableModel tableModel;
    private ArrayList <Organization> sortedOrgs;
    private final String COMMA_DELIMITER = ",";
    */
>>>>>>> origin/master
        
    public SpaceSectionUI(SpaceAssignCntl newParentSpaceAssignCntl) 
    {
        this.parentSpaceAssignCntl = newParentSpaceAssignCntl;
        //this.orgList = new OrganizationList();
        initComponents();
    }
    
    /*
    Double constructor
    */
    public SpaceSectionUI (){

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spaceMap = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        assignButton = new javax.swing.JButton();
        spaceSectionScrollPane = new javax.swing.JScrollPane();
        spaceTable = new javax.swing.JTable();
        organizationScrollPane = new javax.swing.JScrollPane();
        organizationTable = new javax.swing.JTable();
        searchOrgsButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();
        statusJLabel = new javax.swing.JLabel();
        searchSpacesButton = new javax.swing.JButton();
        searchOrgsTextField = new javax.swing.JTextField();
        searchSpacesTextField = new javax.swing.JTextField();
        clockLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        spaceMap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/thon/myimage/BJCMap.png"))); // NOI18N

        backButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        assignButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        assignButton.setText("Assign");
        assignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignButtonActionPerformed(evt);
            }
        });

        spaceTable.setModel(parentSpaceAssignCntl.getSpaceTableModel());
        spaceSectionScrollPane.setViewportView(spaceTable);

        organizationTable.setModel(parentSpaceAssignCntl.getOrganizationTableModel());
        organizationTable.setColumnSelectionAllowed(true);
        organizationScrollPane.setViewportView(organizationTable);
        organizationTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        organizationTable.getAccessibleContext().setAccessibleName("");

        searchOrgsButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchOrgsButton.setText("Search Organizations");
        searchOrgsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchOrgsButtonActionPerformed(evt);
            }
        });

        exitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        statusLabel.setText("Assign Status:");

        statusJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        searchSpacesButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchSpacesButton.setText("Search Spaces");
        searchSpacesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSpacesButtonActionPerformed(evt);
            }
        });

        searchOrgsTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchOrgsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchOrgsTextFieldActionPerformed(evt);
            }
        });

        clockLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        tickTock();

        Timer timer = new Timer(500, new ActionListener()
            {
                @Override
                public void actionPerformed(ActionEvent e)
                {
                    tickTock();
                }
            });

            timer.setRepeats(true);
            timer.setCoalesce(true);
            timer.setInitialDelay(0);
            timer.start();
            clockLabel.setText("");

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(25, 25, 25)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(searchOrgsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(searchOrgsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(organizationScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(spaceSectionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(searchSpacesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(searchSpacesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(318, 318, 318)
                            .addComponent(clockLabel)
                            .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(backButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(assignButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(exitButton))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(statusLabel)
                                    .addComponent(spaceMap, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(statusJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(55, 55, 55)
                            .addComponent(spaceMap, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(backButton)
                                .addComponent(assignButton)
                                .addComponent(exitButton))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(statusLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(statusJLabel)
                            .addGap(32, 32, 32)
                            .addComponent(clockLabel))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(organizationScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(searchOrgsButton)
                                .addComponent(searchOrgsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(spaceSectionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(searchSpacesButton)
                                .addComponent(searchSpacesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addContainerGap())
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    public void tickTock() 
    {
        clockLabel.setText(DateFormat.getDateTimeInstance().format(new Date()));
    }
    
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.setVisible(false);
        this.parentSpaceAssignCntl.parentNavigationCntl.requestMainMenuUI();
    }//GEN-LAST:event_backButtonActionPerformed

    private void assignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignButtonActionPerformed
        int rowOrg = organizationTable.getSelectedRow();
        int rowSpace = spaceTable.getSelectedRow();
        
        Organization currentOrg = parentSpaceAssignCntl.getParentOrganizationList().get(rowOrg);
        Space currentSpace = parentSpaceAssignCntl.getParentSpaceList().get(rowSpace);
        
        currentOrg.setOrgSpace(currentSpace.getSpace());
        currentOrg.setHasSpace(true);
        String newStatus = (currentOrg.getOrgName() + ", Has Space? " + currentOrg.getHasSpace() + ": " + currentOrg.getOrgSpace());
        this.statusJLabel.setText(newStatus);
        
        currentSpace.setOrg(currentOrg.getOrgName());
        currentSpace.setHasOrg(true);
        currentSpace.setCapacity(currentSpace.getCapacity() - currentOrg.getMemberCnt());
        System.out.println(currentSpace.getSpace() + ", Has Org? " + currentSpace.getHasOrg() + ": " + currentSpace.getOrg());
        
        this.parentSpaceAssignCntl.updateTableModels();
    }//GEN-LAST:event_assignButtonActionPerformed
    
<<<<<<< HEAD
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
       
        tableModel = new OrganizationTableModel(orgList);
        tableModel = (OrganizationTableModel) parentSpaceAssignCntl.getOrganizationTableModel();
=======
    private void searchOrgsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchOrgsButtonActionPerformed
        String searchOrgsQuery = searchOrgsTextField.getSelectedText();
        
        if(this.parentSpaceAssignCntl.searchOrganizationList(searchOrgsQuery) == true)
        {
            ArrayList<Integer> organizationsFound = this.parentSpaceAssignCntl.getListOfOrganizationRowsFound();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "No organization found matching the search term.");
        }
        
        //this.parentSpaceAssignCntl
        
        /*
        String lowerCaseSearchString = searchOrgsTextField.getText().toLowerCase();
        ArrayList <Organization> foo = new ArrayList<Organization>();
        String lowerCaseOrgName = "";
>>>>>>> origin/master
        
        String searchString = jTextField1.getText().toLowerCase();
        String lowerCaseOrgName = "";
        ArrayList<Organization> sortedOrgs = new ArrayList<Organization>();
//        if (searchString.contains("")) {
//            return;
//        } else {
        tableModel.clear();
        for(int i = 0; i < orgList.parentOrganizationList.size(); i++) {
            System.out.println("Number: " + i);
            lowerCaseOrgName = orgList.parentOrganizationList.get(i).getOrganizationDetails().toLowerCase();
            if (lowerCaseOrgName.contains(searchString)){
                System.out.println(lowerCaseOrgName);
                
                /*s
                These variables are placeholders to create the new organization list
                */
                String name = orgList.parentOrganizationList.get(i).getOrgName();
                String space = orgList.parentOrganizationList.get(i).getOrgSpace();
                boolean hasAspace = orgList.parentOrganizationList.get(i).getHasSpace();
                String bar = String.valueOf(hasAspace);
                int memberCount = orgList.parentOrganizationList.get(i).getMemberCnt();
                String foobar = String.valueOf(memberCount);
                
                newOrg = new Organization(name, foobar, bar, space);
                sortedOrgs.add(newOrg);
            }
//            }
        }
<<<<<<< HEAD
        organizationTable.setModel(parentSpaceAssignCntl.sortedOrganizationTableModel);
    }//GEN-LAST:event_searchButtonActionPerformed
=======
        */
    }//GEN-LAST:event_searchOrgsButtonActionPerformed
>>>>>>> origin/master

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void searchSpacesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSpacesButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchSpacesButtonActionPerformed

    private void searchOrgsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchOrgsTextFieldActionPerformed
        // TODO add your handling code here:
<<<<<<< HEAD
    }//GEN-LAST:event_jTextField1ActionPerformed
    
    /**
     * @return the sortedOrgs
     */
    public ArrayList <Organization> getSortedOrgs() {
        return sortedOrgs;
    }
=======
    }//GEN-LAST:event_searchOrgsTextFieldActionPerformed
    /*
    private void readSortingFile(String matchingString){
        try
        {
            URL organizationFileURL = getClass().getResource("THONorganizations.csv");
            File organizationFile = new File(organizationFileURL.getPath());
            
            boolean cont = true;
            Scanner in = new Scanner(organizationFile);
            ArrayList<Organization>parentOrganizationList = new ArrayList<>();
>>>>>>> origin/master

    /**
     * @param sortedOrgs the sortedOrgs to set
     */
    public void setSortedOrgs(ArrayList <Organization> sortedOrgs) {
        this.sortedOrgs = sortedOrgs;
    }
    
    public Object getValueAt(int row, int column){
        Object objectToReturn = new Object();
        switch(column)
        {
            case 0:
                objectToReturn = getSortedOrgs().get(row).getOrgName();
                break;
            case 1:
                objectToReturn = getSortedOrgs().get(row).getMemberCnt();
                break;
            case 2:
                objectToReturn = getSortedOrgs().get(row).getHasSpace();
                break;
            case 3:
                objectToReturn = getSortedOrgs().get(row).getOrgSpace();
                break;
            default:
                return null;
        }
        return objectToReturn;
    }
    */
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpaceSectionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpaceSectionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpaceSectionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpaceSectionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignButton;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel clockLabel;
    private javax.swing.JButton exitButton;
<<<<<<< HEAD
    private javax.swing.JButton jButton1;
    public javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JScrollPane organizationScrollPane;
    private javax.swing.JTable organizationTable;
    public javax.swing.JButton searchButton;
=======
    private javax.swing.JScrollPane organizationScrollPane;
    private javax.swing.JTable organizationTable;
    private javax.swing.JButton searchOrgsButton;
    private javax.swing.JTextField searchOrgsTextField;
    private javax.swing.JButton searchSpacesButton;
    private javax.swing.JTextField searchSpacesTextField;
>>>>>>> origin/master
    private javax.swing.JLabel spaceMap;
    private javax.swing.JScrollPane spaceSectionScrollPane;
    private javax.swing.JTable spaceTable;
    private javax.swing.JLabel statusJLabel;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables

}
